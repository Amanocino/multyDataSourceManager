server:
  port: 8101
spring:
  profiles:
    active: test #默认运行环境
  application:
    name: dynamic-datasource-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 172.16.0.35:8848
        namespace: db7e9f2d-4b3c-4f8b-b1b1-696a1862112f
      config:
        server-addr: 172.16.0.35:8848
        namespace: db7e9f2d-4b3c-4f8b-b1b1-696a1862112f
        group: DEFAULT_GROUP  # 默认分组就是DEFAULT_GROUP，如果使用默认分组可以不配置
        file-extension: yml   #默认properties
    gateway:
      # 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]
      routes:
        - id: dynamic-datasource-oauth             # 当前路由的标识, 要求唯一
          uri: lb://dynamic-datasource-oauth       # lb指的是从 nacos 中按照名称获取微服务,并遵循负载均衡策略
          predicates:                    # 断言(就是路由转发要满足的条件)
            - Path=/oauth/**             # 当请求路径满足Path指定的规则时,才进行路由转发
        # 我们?定义的路由 ID，保持唯?
        - id: dynamic-datasource-gateway
          # ?标服务地址（部署多实例）
          uri: lb://dynamic-datasource-gateway
          # gateway?关从服务注册中?获取实例信息然后负载后路由
          # 断?：路由条件，Predicate 接受?个输?参数，返回?个布尔值结果。该接?包含多种默认?法来将 Predicate 组合成其他复杂的逻辑（?如：与，或，?）。
          predicates:
            - Path=/dynamic-datasource-gateway/api/**
          filters:                       # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=1              # 转发之前去掉1层路径
        - id: dynamic-datasource-core
          # ?标服务地址（部署多实例）
          uri: lb://dynamic-datasource-core
          # 多数据源从服务注册中?获取实例信息然后负载后路由
          # 断?：路由条件，Predicate 接受?个输?参数，返回?个布尔值结果。该接?包含多种默认?法来将 Predicate 组合成其他复杂的逻辑（?如：与，或，?）。
          predicates:
            - Path=/dynamic-datasource-core/api/**
          filters: # 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
            - StripPrefix=2              # 转发之前去掉1层路径
